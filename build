#!/bin/bash

BASE=$(cd $(dirname ${BASH_SOURCE[0]}); pwd)
declare -A VERSIONS
VERSIONS[ctap]=2.0.0
VERSIONS[libsodium]=1.0.3
VERSIONS[libvigor]=1.2.8
VERSIONS[libzmq]=4.1.3

declare -A BRANCHES
BRANCHES[ctap]=master
BRANCHES[libvigor]=master

PACKAGES=()
TARGETS=()

bail() {
  echo >&2
  echo >&2 "FAIL!"
  echo >&2 $*
  echo >&2
  exit 2
}

while [[ $# != 0 ]]; do
  case "${1}" in
  (ctap|libsodium|libvigor|libzmq|autotools)
    PACKAGES+=( $1 )
    ;;
  (*/*)
    TARGETS+=( $1 )
    ;;
  (ubuntu)
    TARGETS+=( debuild/precise )
    TARGETS+=( debuild/trusty )
    TARGETS+=( debuild/vivid )
    ;;
  (centos)
    TARGETS+=( rpmbuild/centos5 )
    TARGETS+=( rpmbuild/centos6 )
    TARGETS+=( rpmbuild/centos7 )
    ;;
  (precise|trusty|vivid)
    TARGETS+=( "debuild/${1}" )
    ;;
  (centos5|centos6|centos7)
    TARGETS+=( "rpmbuild/${1}" )
    ;;
  esac
  shift
done

if [[ ${#PACKAGES[@]} == 0 ]]; then
  echo "building default packages"
  PACKAGES=(ctap libsodium libvigor libzmq)
fi
if [[ ${#TARGETS[@]} == 0 ]]; then
  echo "using default targets"
  TARGETS=(debuild/{precise,trusty,vivid} rpmbuild/centos{5,6,7})
fi

for package in ${PACKAGES[@]}; do
  USE_BRANCH=${BRANCH:-}
  if [[ -z ${USE_BRANCH} ]]; then
    USE_BRANCH=${BRANCHES[${package}]:-}
  fi

  for target in ${TARGETS[@]}; do
    if [[ -n ${USE_BRANCH} ]]; then
      echo "building ${package} (branch ${USE_BRANCH}) in ${target}"
      docker run -it -e BRANCH=${USE_BRANCH} -e VERSION=${VERSIONS[${package}]} -v ${BASE}/${package}:/srv ${target}:latest || \
        bail "unable to build ${BASE}/${package} (branch ${USE_BRANCH}) in ${target}"
    else
      echo "building ${package} in ${target}"
      docker run -it -e VERSION=${VERSIONS[${package}]} -v ${BASE}/${package}:/srv ${target}:latest || \
        bail "unable to build ${BASE}/${package} in ${target}"
    fi
    echo; echo; echo; echo;
  done
done
